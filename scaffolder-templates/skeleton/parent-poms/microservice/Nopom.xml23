<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.microservicios</groupId>
		<artifactId>microservicios-pom</artifactId>
		<version>1.0.0</version>
	    <relativePath>../parent</relativePath>
	</parent>
	
    <groupId>com.microservicios</groupId>
	<artifactId>microservice-microservicios-pom</artifactId>
	<packaging>pom</packaging>
	<version>1.0.0</version>


	<properties>
		<java.version>11</java.version>
		<maven.compiler.target>11</maven.compiler.target>
		<maven.compiler.source>11</maven.compiler.source>
		<spring-cloud.version>2021.0.0</spring-cloud.version>
		<micrometer.version>1.8.1</micrometer.version>
		<mapstruct.version>1.3.0.Final</mapstruct.version>
		<projectlombok.version>1.18.0</projectlombok.version>
		<mockito.version>3.11.2</mockito.version>
		<log4j2.version>2.15.0</log4j2.version>
	</properties>


	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-aop</artifactId>
		</dependency>
		<dependency>
			<groupId>com.microservicios.interfaces</groupId>
			<artifactId>common-interfaces</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!--Incompatible con spring-boot-starterwebflux. Buscar alternativa-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-config</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-consul-discovery</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-sleuth</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-sleuth-zipkin</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-webflux</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!--Rest documentation-->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<version>1.6.3</version>
		</dependency>
		<!--Circuit Breaker-->
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-circuitbreaker-reactor-resilience4j</artifactId>
		</dependency>
		<!--Redis -->
		<!--<dependency>-->
		<!--<groupId>org.springframework.boot</groupId>-->
		<!--<artifactId>spring-boot-starter-data-redis</artifactId>-->
		<!--</dependency>-->
		<!--<dependency>-->
		<!--<groupId>redis.clients</groupId>-->
		<!--<artifactId>jedis</artifactId>-->
		<!--</dependency>-->
		<!-- Metrics -->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-core</artifactId>
			<version>${micrometer.version}</version>
		</dependency>
		<!--<dependency>-->
		<!--<groupId>io.micrometer</groupId>-->
		<!--<artifactId>micrometer-registry-jmx</artifactId>-->
		<!--<version>${micrometer.version}</version>-->
		<!--</dependency>-->
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${micrometer.version}</version>
		</dependency>
		<!--<dependency>-->
		<!--<groupId>io.micrometer</groupId>-->
		<!--<artifactId>micrometer-registry-elastic</artifactId>-->
		<!--<version>${micrometer.version}</version>-->
		<!--</dependency>-->


		<!-- Logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.26</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.2.3</version>
		</dependency>

		<!-- Lombook -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${projectlombok.version}</version>
		</dependency>
		<!-- Side libraries -->
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<!-- use mapstruct-jdk8 for Java 8 or higher -->
			<version>${mapstruct.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>31.0.1-jre</version>
		</dependency>


		<!--Test libraries-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.mockito</groupId>
					<artifactId>mockito-core</artifactId>
				</exclusion>
			</exclusions>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.1</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${projectlombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.4</version>
				<!--<configuration>-->
				<!--<excludes>-->
				<!--<exclude>org.eea.*.persistence.**</exclude>-->
				<!--<exclude>org.eea.*.configuration</exclude>-->
				<!--<exclude>org.eea.*.service.vo</exclude>-->
				<!--<exclude>org.eea.*.mapper</exclude>-->
				<!--<exclude>org.eea.ums.service.keycloak.model.**</exclude>-->
				<!--<exclude>org.eea.indexsearch.io.kafka.domain.**</exclude>-->
				<!--</excludes>-->
				<!--</configuration>-->
				<executions>
					<execution>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<!-- attached to Maven test phase -->
					<execution>
						<id>report</id>
						<phase>test</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.7.0.1746</version>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<!-- select non-aggregate reports -->
							<report>report</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
		</repository>
	</repositories>
	<!--<distributionManagement>
		<snapshotRepository>
			<id>nexus-snapshots</id>
			<url>https://nexus-oami.altia.es/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>
	-->
	<profiles>
		<profile>
			<id>sonar</id>
			<properties>
				<sonar.projectKey>${project.groupId}:${project.artifactId}:${sonar.jenkins.branch}
				</sonar.projectKey>
				<sonar.projectName>${project.artifactId}:${sonar.jenkins.branch}</sonar.projectName>
				<!--<sonar.coverage.exclusions>-->
				<!--**/org/eea/**/configuration/**,**/org/eea/**/service/vo/**,**/org/eea/interfaces/**,-->
				<!--**/org/eea/**/mapper/**,**/org/eea/**/persistence/**,**/org/eea/ums/service/keycloak/model/**,-->
				<!--**/org/eea/indexsearch/io/kafka/domain/**-->
				<!--</sonar.coverage.exclusions>-->
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.sonarsource.scanner.maven</groupId>
						<artifactId>sonar-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>