apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: Arquitectura-Referencia
  title: Arquitectura de Referencia (Spring-Boot)
  description: Crea tu proyecto en base a la arquitectura de referencia
  tags:
    - recommended
    - java
spec:
  owner: Equipo Hunters
  type: service

  parameters:
    - title: Rellena información básica
      required:
        - component_id
        - artifact_id
        - description
        - owner
      properties:
        component_id:
          title: Project ID
          type: string
          description: Identificador del proyecto ej. (com.miproyecto)
        artifact_id:
          title: Artifact ID
          type: string
          description: Identificador del artefacto del proyecto ej. (MiProyecto)
        description:
          title: Description
          type: string
          description: Ayuda a otros saber de que va el proyecto
        owner:
          title: Owner
          type: string
          description: Creador del componente
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group

    - title: Project name
      required:
        - path
      properties:
        path:
          title: Name
          type: string

    # - title: Elige dirección GitHub
    #   required:
    #     - repoUrl
    #   properties:
    #     repoUrl:
    #       title: Repository Location
    #       type: string
    #       ui:field: RepoUrlPicker
    #       ui:options:
    #         allowedHosts:
    #           - github.com

  steps:
    - id: template
      name: Fetch Skeleton + Template
      action: fetch:template
      input:
        url: ./skeleton
        copyWithoutRender:
          - .github/workflows/*
        values:
          description: ${{ parameters.description }}
          component_id: ${{ parameters.component_id }}
          artifact_id: ${{ parameters.artifact_id }}
          owner: ${{ parameters.owner }}
#          destination: ${{ parameters.repoUrl | parseRepoUrl }}
#          http_port: 8080

    # - id: file
    #   name: Downloading project
    #   action: publish:file
    #   input:
    #     path: ${{parameters.path}}


    - id: downloadfile
      name: Zipping project
      action: altia:downloadfile
      input:
        path: ${{parameters.path}}
        #path: "/home/node/${{ parameters.name }}"
        #path: 'C:\Users\tahir.farooq\Downloads\ArqRef'

    # - id: publish
    #   name: Publish
    #   action: publish:github
    #   input:
    #     allowedHosts: ["github.com"]
    #     description: This is ${{ parameters.component_id }}
    #     repoUrl: ${{ parameters.repoUrl }}

    # - id: registering
    #   name: Registering component
    #   action: altia:registering
    #   input:
    #     repoContentsUrl: ${{ steps.downloadfile.output.repoContentsUrl }}
    #     catalogInfoPath: "/catalog-info.yaml"
    #     optional: true

    # - id: registering
    #   name: Registering component
    #   action: altia:registering
    #   input:
    #     repoContentsUrl: "http://localhost:3000/${{parameters.path}}"
    #     catalogInfoPath: "/catalog-info.yaml"
    #     optional: true

    # - id: register
    #   name: Register
    #   action: catalog:register
    #   input:
    #     repoContentsUrl: ${{ steps.publish.output.repoContentsUrl }}
    #     catalogInfoPath: "/catalog-info.yaml"

  output:
    remoteUrl: "${{ parameters.baseUrl }}/static/${{parameters.path}}.zip"
    #remoteUrl: 
    entityRef: ${{ steps.register.output.entityRef }}

    # remoteUrl: "http://localhost:7007/static/${{parameters.path}}.zip"
  # output:
    # GitHubOutput: ${{ steps.publish.output.remoteUrl }}
    # entityRef: ${{ steps.registering.output.entityRef }}
